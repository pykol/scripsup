# Generated by Django 2.2 on 2020-07-13 17:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('inscrire', '0039_formation_sujet_email_pieces_justificatives'),
    ]

    operations = [
        migrations.CreateModel(
            name='Envoi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscrire.Candidat')),
            ],
        ),
        migrations.AlterModelOptions(
            name='mefmatiere',
            options={'ordering': ['libelle_edition'], 'verbose_name': 'matière MEF', 'verbose_name_plural': 'matières MEF'},
        ),
        migrations.AlterModelOptions(
            name='mefoption',
            options={'ordering': ['rang', 'matiere'], 'verbose_name': 'option MEF', 'verbose_name_plural': 'options MEF'},
        ),
        migrations.AlterField(
            model_name='fichebourse',
            name='enfants_etablissement',
            field=models.PositiveSmallIntegerField(default=1, verbose_name="nombre d'enfants dans l'établissement (y compris l'étudiant)"),
        ),
        migrations.AlterField(
            model_name='formation',
            name='sujet_email_pieces_justificatives',
            field=models.CharField(blank=True, default='', max_length=100),
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brouillon', models.BooleanField(default=True)),
                ('de', models.EmailField(max_length=254)),
                ('repondre_a', models.EmailField(max_length=254)),
                ('copie_responsables', models.BooleanField(default=False, help_text='Cocher pour envoyer une copie aux responsables légaux')),
                ('etat_dossier', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Édition'), (2, 'Complet'), (3, 'Terminé')], default=None, help_text="N'envoyer qu'aux candidats dont le dossier est dans l'état indiqué", null=True)),
                ('connexion', models.NullBooleanField(default=None, help_text='Envoyer à tous les candidats/ceux qui se sont connectés/ceux        qui ne se sont jamais connectés')),
                ('derniere_connexion_avant', models.DateTimeField(blank=True, default=None, help_text="N'envoyer que si le candidat ne s'est pas connecté depuis cette date", null=True)),
                ('derniere_connexion_apres', models.DateTimeField(blank=True, default=None, help_text="N'envoyer que si le candidat s'est connecté depuis cette date", null=True)),
                ('internat', models.NullBooleanField(default=None, help_text='Envoyer à tous les candidats/ceux qui sont sur un voeu        avec internat/sans internat')),
                ('sujet', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('candidats', models.ManyToManyField(through='inscrire.Envoi', to='inscrire.Candidat')),
                ('etablissement', models.ForeignKey(blank=True, help_text='Envoyer aux candidats de cet établissement (si formation non choisie)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscrire.Etablissement')),
                ('formation', models.ForeignKey(blank=True, help_text='Envoyer aux candidats de cette formation', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inscrire.Formation')),
            ],
        ),
        migrations.AddField(
            model_name='envoi',
            name='mailing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inscrire.Mailing'),
        ),
        migrations.AddField(
            model_name='envoi',
            name='responsables',
            field=models.ManyToManyField(to='inscrire.ResponsableLegal'),
        ),
    ]
